LOADL 1
STORE (1) 0[SB]
<<<<<<< HEAD
JUMP while_start_1
=======
LOADA 0[SB]
STOREI (1)
STORE (8) 1[SB]
;fr.n7.stl.minic.ast.expression.accessible.VariableAccess@574caa3f
;(i == 0)
LOAD (1) 0[SB]
LOADL 0
SUBR IEq
JUMPIF (0) else_1
>>>>>>> 3d0f29a (int* ptr= cela fonctionne dans cette version)
LOADL 1
LOADA 0[SB]
STOREI (1)
LOADL 5
LOADL 1
SUBR IMul
SUBR MAlloc
STORE (1) 10[SB]
;fr.n7.stl.minic.ast.expression.accessible.VariableAccess@3c679bde
LOAD (1) 10[SB]
LOADL 3
LOADL 1
SUBR IAdd
RETURN (1) 0
RETURN (0) 0
main
PUSH 0
POP (0) 0
LOADL 5
CALL (LB) increment
STORE (1) 0[LB]
LOAD (1) 0[LB]
RETURN (1) 0
RETURN (0) 0
HALT

